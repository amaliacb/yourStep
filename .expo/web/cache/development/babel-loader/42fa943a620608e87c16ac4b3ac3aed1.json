{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar getData = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('https://jsonplaceholder.typicode.com/users');\n      var data = yield response.json();\n      setUsersData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function getData() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["StatusBar","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","getData","response","fetch","data","json","setUsersData","error","console","log"],"sources":["/home/amaliacb/Desktop/practicas/SecondProject/yourStep/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst getData=async()=>{\n  try{\n    const response=await fetch('https://jsonplaceholder.typicode.com/users');\n    const data=await response.json();\n    setUsersData(data)\n  }\n  catch(error){\n    console.log(error)\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAAA;AAG5C,eAAe,SAASC,GAAG,GAAG;EAC5B,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAA;IAAA,EAAoD,EACzD,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG;EAAA,EACrB;AAEX;AAEA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAMC,OAAO;EAAA,6BAAC,aAAS;IACrB,IAAG;MACD,IAAMC,QAAQ,SAAOC,KAAK,CAAC,4CAA4C,CAAC;MACxE,IAAMC,IAAI,SAAOF,QAAQ,CAACG,IAAI,EAAE;MAChCC,YAAY,CAACF,IAAI,CAAC;IACpB,CAAC,CACD,OAAMG,KAAK,EAAC;MACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAAA,gBATKN,OAAO;IAAA;EAAA;AAAA,GASZ"},"metadata":{},"sourceType":"module"}